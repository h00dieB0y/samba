name: UI CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ui-${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }} 
  cancel-in-progress: true

jobs:
  path-check:
    uses: ./.github/workflows/path-change-detector.yml
    with:
      base_ref: ${{ github.event.pull_request.base.sha || github.event.before }}
      head_ref: ${{ github.event.pull_request.head.sha || github.event.after }}
      paths: 'app/ui'

  sonarqube:
    name: SonarQube

    needs: path-check

    if: needs.path-check.outputs.changes_detected == 'true'
    
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app/ui
    steps:
      # Check out the repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures better relevance in Sonar analysis

      # Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable  # or specify a version: '3.10.0'
          
      
      # Cache flutter dependencies
      - name: Cache Flutter build directory
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            .pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      
      # Get project dependencies
      - name: Get Dependencies
        run: flutter pub get

      - name: Build Flutter project (Web)
        run: flutter build web

      # Test the Flutter project
      - name: Run Tests
        run: flutter test

      # SonarQube scan
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Required to get PR information
          SONAR_TOKEN: ${{ secrets.UI_SONAR_TOKEN }}
        with:
          projectBaseDir: ./app/ui
