name: API CI Pipeline

run-name: ${{ github.actor }} is testing out the API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  Build_and_Test:

    runs-on: ubuntu-latest

    env:
      JAVA_VERSION: '21'
      MAVEN_OPTS: '-Xmx2g'
      SONAR_TOKEN: ${{ secrets.API_SONAR_TOKEN }}
      SONAR_ORGANIZATION: jarhead-killgrave
      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_PROJECT_KEY: com.somba:api

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: somba_test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mongo:
        image: mongo:6
        env:
          MONGO_INITDB_ROOT_USERNAME: test_mongo_user
          MONGO_INITDB_ROOT_PASSWORD: test_mongo_pass
          MONGO_INITDB_DATABASE: test_somba_catalog
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand({ ping: 1 })' | mongo localhost:27017/test_somba_catalog --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Set up JDK 21
      - name: Set Up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      # 3. Cache Maven Dependencies
      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/maven/plugins/maven-surefire-plugin
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Verify Maven Installation
      - name: Verify Maven Installation
        run: mvn --version

      # 5. Build and Test with Maven
      - name: Build and Test with Maven
        run: mvn clean verify --fail-fast -Dspring.profiles.active=test
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/somba_test_db
          SPRING_DATA_MONGODB_URI: mongodb://test_mongo_user:test_mongo_pass@localhost:27017/test_somba_catalog
          APP_PORT: 8082
          DB_PORT: 5432
          DB_NAME: somba_test_db
          DB_USER: test_user
          DB_PASSWORD: test_password
          MONGO_PORT: 27017
          MONGO_DB: test_somba_catalog
          MONGO_INITDB_ROOT_USERNAME: test_mongo_user
          MONGO_INITDB_ROOT_PASSWORD: test_mongo_pass
          API_VERSION: test_v1
          # Add other necessary environment variables if needed

      # 6. Run SonarCloud Analysis
      - name: Run SonarCloud Analysis
        uses: SonarSource/sonarcloud-github-action@v4
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ env.SONAR_ORGANIZATION }}
            -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
            -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.java.binaries=target/classes

      # 7. Upload Test Reports
      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: target/surefire-reports/

      # 8. Upload JaCoCo Coverage Report
      - name: Upload JaCoCo Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
