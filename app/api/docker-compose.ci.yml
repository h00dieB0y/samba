version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16.1-alpine
    container_name: somba_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB NoSQL Database
  mongodb:
    image: mongo:6.0
    container_name: somba_mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: somba_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS}
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
      - "${ELASTICSEARCH_PORT_ALT}:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/"]
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    restart: unless-stopped

volumes:
  db-data:
  mongo-data:
  es-data:
