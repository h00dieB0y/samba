version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16.1-alpine
    container_name: somba_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer for DB Management
  adminer:
    image: adminer:latest
    container_name: somba_adminer
    restart: always
    ports:
      - "${ADMINER_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy

  # MongoDB NoSQL Database
  mongodb:
    image: mongo:6.0
    container_name: somba_mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # Mongo-Express for MongoDB Management
  mongo-express:
    image: mongo-express
    container_name: somba_mongo_express
    restart: always
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    depends_on:
      mongodb:
        condition: service_healthy

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: somba_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=${ELASTICSEARCH_JAVA_OPTS}
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
      - "${ELASTICSEARCH_PORT_ALT}:9300" # For internal cluster communication
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/"]
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    restart: unless-stopped

  # Kibana (For Elasticsearch Visualization)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.0
    container_name: somba_kibana
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:${ELASTICSEARCH_PORT}
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped


# Docker-Managed Named Volumes
volumes:
  db-data:
  mongo-data:
  es-data:
